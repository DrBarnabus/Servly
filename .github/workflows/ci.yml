name: CI

on:
  push:
    branches:
    - main
    paths:
    - '**'

  pull_request:
    branches:
    - main
    paths:
    - '**'

  repository_dispatch:
    types: [release]

env:
  DOTNET_ROLL_FORWARD_ON_NO_CANDIDATE_FX: 2
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: 1
  ENABLED_DIAGNOSTICS: ${{ secrets.ENABLED_DIAGNOSTICS }}

jobs:
  prepare:
    name: Prepare
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
      fail-fast: false

    steps:
    -
      name: Checkout
      uses: actions/checkout@v2
    -
      name: Cache Cake Frosting
      id: cache-cake
      uses: actions/cache@v2
      with:
        path: run
        key: run-${{ runner.os }}-${{ hashFiles('./build/**') }}
    -
      name: Install .NET SDK 6.0.x
      uses: actions/setup-dotnet@v1
      if: steps.cache-cake.outputs.cache-hit != 'true'
      with:
        dotnet-version: '6.0.x'
    -
      name: '[Prepare]'
      if: steps.cache-cake.outputs.cache-hit != 'true'
      run: dotnet build build/CI.sln --configuration=Release

  build:
    name: Build & Package
    needs: [prepare]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
      fail-fast: false

    steps:
    -
      name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    -
      name: Install .NET SDK 6.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
    -
      name: Use Cached Cake Frosting
      id: cache-cake
      uses: actions/cache@v2
      with:
        path: run
        key: run-${{ runner.os }}-${{ hashFiles('./build/**') }}
    -
      name: Use Cached Cake Tools
      id: cache-tools
      uses: actions/cache@v2
      with:
        path: tools
        key: tools-${{ runner.os }}-${{ hashFiles('./build/**') }}
    -
      name: '[Build]'
      shell: pwsh
      run: dotnet run/build.dll --target=Package
    -
      name: 'Upload Packages'
      uses: actions/upload-artifact@v2
      if: matrix.os == 'ubuntu-latest'
      with:
        name: packages
        path: ${{ github.workspace }}/artifacts/packages

  unit_test:
    name: Unit Test
    needs: [prepare]
    runs-on: ${{ matrix.os }}
    env:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        targetFramework: [net6.0]
      fail-fast: false

    steps:
    -
      name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    -
      name: Install .NET SDK 6.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
    -
      name: Use Cached Cake Frosting
      id: cache-cake
      uses: actions/cache@v2
      with:
        path: run
        key: run-${{ runner.os }}-${{ hashFiles('./build/**') }}
    -
      name: Use Cached Cake Tools
      id: cache-tools
      uses: actions/cache@v2
      with:
        path: tools
        key: tools-${{ runner.os }}-${{ hashFiles('./build/**') }}
    -
      name: '[Unit Test]'
      shell: pwsh
      run: dotnet run/build.dll --target=Test --dotnet_target=${{ matrix.targetFramework }}

  publish:
    name: Publish
    needs: [build, unit_test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        taskName: [NuGet]
      fail-fast: false
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}

    steps:
    -
      name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    -
      name: Install .NET SDK 6.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
    -
      name: Use Cached Cake Frosting
      id: cache-cake
      uses: actions/cache@v2
      with:
        path: run
        key: run-${{ runner.os }}-${{ hashFiles('./build/**') }}
    -
      name: Use Cached Cake Tools
      id: cache-tools
      uses: actions/cache@v2
      with:
        path: tools
        key: tools-${{ runner.os }}-${{ hashFiles('./build/**') }}
    -
      uses: actions/download-artifact@v2
      name: Download Packages
      with:
        name: packages
        path: ${{ github.workspace }}/artifacts/packages
    -
      name: '[Publish]'
      shell: pwsh
      run: dotnet run/publish.dll --target=Publish${{ matrix.taskName }}

  release:
    name: Release
    needs: [publish]
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
    -
      name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    -
      name: Install .NET SDK 6.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
    -
      name: Use Cached Cake Frosting
      id: cache-cake
      uses: actions/cache@v2
      with:
        path: run
        key: run-${{ runner.os }}-${{ hashFiles('./build/**') }}
    -
      name: Use Cached Cake Tools
      id: cache-tools
      uses: actions/cache@v2
      with:
        path: tools
        key: tools-${{ runner.os }}-${{ hashFiles('./build/**') }}
    -
      name: '[Release]'
      shell: pwsh
      run: dotnet run/release.dll --target=PublishRelease